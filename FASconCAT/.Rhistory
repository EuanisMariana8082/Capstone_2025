1 + 3
library(tidyverse)
dat <- read_csv("../../Data/BioLog_Plate_Data.csv")
dat <- read_csv("../../Data/BioLog_Plate_Data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
library(tidyverse)
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
dat <- read_csv("../../Data/BioLog_Plate_Data.csv")
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
```{r, echo=TRUE,message=FALSE,warning=FALSE}
library(tidyverse)
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
```{r, echo=TRUE,message=FALSE,warning=FALSE}
library(tidyverse)
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
dat <- read_csv("../../Data/BioLog_Plate_Data.csv")
dat <- read_csv("Desktop/Data_Course_EUAN/Assignments/Assignment_6//Data/BioLog_Plate_Data.csv")
qt(.975,df=12)
# Load required libraries
library(ape)
library(ggtree)
# Load your tree
tree <- read.tree("Turtle_Tree.nwk")  # Replace with your actual filename
# Set your working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")  # Adjust if needed
# Load the phylogenetic tree
tree <- read.tree("Condensed_Turtle_Tree.nwk")
# Plot tree with custom colors and fonts
ggtree(tree, layout="rectangular") +
geom_tiplab(size=5, fontface="bold", color="darkblue") +  # Larger, readable font
geom_tippoint(aes(color=label), size=4) +  # Assign colors to taxa points
theme_tree2() +
scale_color_manual(values=c("red", "green", "blue", "purple", "orange")) +  # Custom colors
theme(
text = element_text(size=14, family="Arial"),  # Improves text readability
plot.title = element_text(size=18, face="bold")
)
#make sure to install the packages
install.packages(ape)
# Install required packages if missing
if (!requireNamespace("ape", quietly = TRUE)) install.packages("ape")
if (!requireNamespace("ggtree", quietly = TRUE)) install.packages("ggtree")
# Load libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# List available files (useful for debugging)
print(list.files(getwd()))
# Load Newick tree file
tree <- read.tree("Condensed_Turtle_Tree.nwk")
# Ensure labels are properly formatted
tree$tip.label <- make.names(tree$tip.label)
# Plot tree with enhanced readability
ggtree(tree, layout="rectangular") +
geom_tiplab(size=5, fontface="bold", color="darkblue") +  # Bold, readable labels
geom_tippoint(aes(color=factor(label)), size=4) +  # Ensures proper label-based coloring
theme_tree2() +
scale_color_manual(values=c("red", "green", "blue", "purple", "orange")) +  # Custom colors
theme(
text = element_text(size=14, family="Arial"),  # Improve text readability
plot.title = element_text(size=18, face="bold")
)
# Load required libraries
library(ape)
clear
# Load required libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# Check if file exists in directory
print(list.files(getwd()))
# Load tree file, ensuring correct format
tree <- read.tree("Condensed_Turtle_Tree.nwk")
# Fix potential issues with labels and format
if (class(tree) == "multiPhylo") {
tree <- tree[[1]]  # Extract first tree if multiPhylo object
}
# Ensure labels are readable
tree$tip.label[is.na(tree$tip.label)] <- "Unknown"
# Basic tree plot (test before applying colors)
ggtree(tree) + theme_tree2()
# Plot tree with custom colors and fonts
ggtree(tree, layout="rectangular") +
geom_tiplab(size=5, fontface="bold", color="darkblue") +
geom_tippoint(aes(color=factor(tree$tip.label)), size=4) +
theme_tree2() +
scale_color_manual(values=c("red", "green", "blue", "purple", "orange")) +
theme(text = element_text(size=14, family="Arial"),
plot.title = element_text(size=18, face="bold"))
# Load required libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# Load required libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# Check if file exists in directory
print(list.files(getwd()))
# Load Newick tree file
tree <- read.tree("Condensed_Turtle_Tree.nwk")
# Verify tree structure
print(tree)
# Verify tree structure
print(tree)
# Fix potential multiPhylo issue
if (class(tree) == "multiPhylo") {
tree <- tree[[1]]  # Extract first tree if multiPhylo object
}
# Load required libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# Check if file exists in directory
print(list.files(getwd()))
# Load Newick tree file
tree <- read.tree("Condensed_Turtle_Tree.nwk")
# Verify tree structure
print(tree)
# Fix potential multiPhylo issue
if (class(tree) == "multiPhylo") {
tree <- tree[[1]]  # Extract first tree if multiPhylo object
}
# Ensure labels are readable
print(tree$tip.label)  # Check labels
tree$tip.label[is.na(tree$tip.label)] <- "Unknown"  # Fix missing labels
# Basic tree plot (test before applying colors)
ggtree(tree) + theme_tree2()
# Plot tree with custom colors and fonts
ggtree(tree, layout="rectangular") +
geom_tiplab(size=5, fontface="bold", color="darkblue") +
geom_tippoint(aes(color=factor(tree$tip.label)), size=4) +
theme_tree2() +
scale_color_manual(values=c("red", "green", "blue", "purple", "orange")) +
theme(text = element_text(size=14, family="Arial"),
plot.title = element_text(size=18, face="bold"))
library(ape)
library(ape)
library(ggtree)
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
tree <- read.tree("Condensed_Turtle_Tree.nwk")
if (class(tree) == "multiPhylo") {
tree <- tree[[1]]
}
tree$tip.label[is.na(tree$tip.label)] <- "Unknown"
if (class(tree) == "multiPhylo") {
tree <- tree[[1]]
}
tree <- tree[[1]]
if (class(tree) == "multiPhylo") {
tree <- tree[[1]]
}
tree <- tree[[1]]
tree$tip.label[is.na(tree$tip.label)] <- "Unknown"
ggtree(tree) + theme_tree2()  # Basic visualization test
# Load required libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# Load tree file
tree <- read.tree("Condensed_Turtle_Tree.nwk")
tree <- tree[[1]]  # Extract first tree from multiPhylo
# Ensure tree is correctly formatted
print(class(tree))  # Should return "phylo"
View(tree)
# Load required libraries
library(ape)
# Load required libraries
library(ape)
library(ggtree)
# Set working directory
setwd("C:/Users/Rushe/Desktop/capstone 2025/FASconCAT/")
# Load tree file
if (!file.exists("Condensed_Turtle_Tree.nwk")) {
stop("Error: Tree file not found at the specified location!")
}
tree <- read.tree("Condensed_Turtle_Tree.nwk")
# Ensure tree is correctly formatted
if (!inherits(tree, "phylo")) {
stop("Error: The tree object is not of class 'phylo'.")
}
# Fix missing tip labels
if (!is.null(tree$tip.label) && is.character(tree$tip.label)) {
tree$tip.label[is.na(tree$tip.label)] <- "Unknown"
} else {
stop("Error: No valid tip labels found in tree object!")
}
# Test basic tree visualization
ggtree(tree) + theme_tree2()
